# This config file puts two appenders on the root logger.  The CONSOLE
# appender will emit messages directly to stdout, which has a filter to
# only show messages at INFO and above.  The LOGFILE appender writes
# to "test.log", and doesn't filter anything.  Both appenders use a
# PatternLayout to do printf-like formatting of the available logging
# fields.
# log4d.rootLogger              = TRACE, CONSOLE, LOGFILE

log4d.appender.CONSOLE        = log4d.appender.Screen
log4d.appender.CONSOLE.layout = log4d.layout.PatternLayout
log4d.appender.CONSOLE.layout.ConversionPattern = %d{ISO8601} %p{1} %c %m%n
log4d.appender.CONSOLE.filter          = log4d.filter.LevelRange
log4d.appender.CONSOLE.filter.LevelMin = all
log4d.appender.CONSOLE.filter.LevelMax = off

log4d.appender.TEST_OUT          = log4d.appender.File
log4d.appender.TEST_OUT.filename = test-out.log
log4d.appender.TEST_OUT.layout   = log4d.layout.PatternLayout
log4d.appender.TEST_OUT.layout.ConversionPattern = [%d] %p{1} %c %m%n
log4d.appender.TEST_OUT.filter          = log4d.filter.LevelRange
log4d.appender.TEST_OUT.filter.LevelMin = info
log4d.appender.TEST_OUT.filter.LevelMax = off

log4d.appender.TEST_ERR          = log4d.appender.File
log4d.appender.TEST_ERR.filename = test-err.log
log4d.appender.TEST_ERR.layout   = log4d.layout.PatternLayout
log4d.appender.TEST_ERR.layout.ConversionPattern = [%d] %p{1} %c %m%n
log4d.appender.TEST_ERR.filter          = log4d.filter.LevelRange
log4d.appender.TEST_ERR.filter.LevelMin = error
log4d.appender.TEST_ERR.filter.LevelMax = off

log4d.logger.my.test.logger   = TRACE, TEST_OUT, TEST_ERR
log4d.rootLogger              = TRACE, CONSOLE
